@page "/exporting"
<div>
    <hr />
    <div class="bg-primary p-2">
        <h3 class="text-center text-white">Exporting and searchCheckbox list filtering</h3>
    </div>
    <div class="">
        <TelerikGrid Data="Employees"
                     Height="400px"
                     Width="100%"
                     Pageable="true"
                     PageSize="3"
                     Groupable="true"
                     Sortable="true"
                     Reorderable="true"
                     Resizable="true"
                     AutoGenerateColumns="true"
                     FilterMode="GridFilterMode.FilterMenu" FilterMenuType="FilterMenuType.CheckBoxList">
            <GridToolBar>
                <span class="k-toolbar-spacer"></span> @* add this spacer to keep the searchbox on the right *@
                <GridSearchBox />
                <GridCommandButton Command="CsvExport" Icon="file-csv">Export to CSV</GridCommandButton>
                <label class="k-checkbox-label"><TelerikCheckBox @bind-Value="@ExportAllPages" />Export All Pages</label>
                <GridCommandButton Command="ExcelExport" Icon="file-excel">Export to Excel</GridCommandButton>
                <label class="k-checkbox-label"><TelerikCheckBox @bind-Value="@ExportAllPages" />Export All Pages</label>
            </GridToolBar>
            <GridExport>
                <GridCsvExport FileName="telerik-grid-export" AllPages="@ExportAllPages" />
                <GridExcelExport FileName="telerik-grid-export" AllPages="@ExportAllPages" />
            </GridExport>
            <GridColumns>
                <GridCheckboxColumn />
                <GridAutoGeneratedColumns />
                <GridCommandColumn>
                    <GridCommandButton Command="Edit" Icon="edit">Edit</GridCommandButton>
                </GridCommandColumn>
            </GridColumns>

        </TelerikGrid>
    </div>
</div>
@code{
    public List<Employee> Employees { get; set; } = new List<Employee>();
    bool ExportAllPages { get; set; }
    protected override Task OnParametersSetAsync()
    {
        Employees = DataProvider.GetEmployees();
        return base.OnParametersSetAsync();
    }
}